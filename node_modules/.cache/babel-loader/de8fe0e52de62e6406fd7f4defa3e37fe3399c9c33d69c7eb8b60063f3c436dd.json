{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\muham\\\\OneDrive\\\\Desktop\\\\havaDurum\\\\src\\\\components\\\\SearchBar.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchBar = ({\n  setWeatherData,\n  setError\n}) => {\n  _s();\n  const [city, setCity] = useState('');\n  const API_KEY = 'a7a652dd0dc5e4fd3b59a7ff0590b16f';\n  const BASE_URL = 'https://api.openweathermap.org/data/2.5/weather';\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!city.trim()) {\n      setError('Lütfen bir şehir adı girin.');\n      return;\n    }\n    try {\n      const encodedCity = encodeURIComponent(city.trim());\n      const response = await axios.get(`${BASE_URL}?q=${encodedCity}&appid=${API_KEY}&units=metric&lang=tr`);\n      if (response.data && response.data.cod === 200) {\n        setWeatherData(response.data);\n        setError('');\n      } else {\n        setError('Hava durumu verisi alınamadı.');\n        setWeatherData(null);\n      }\n    } catch (error) {\n      if (error.response) {\n        if (error.response.status === 404) {\n          setError(`${city} şehri bulunamadı. Lütfen geçerli bir şehir adı girin.`);\n        } else if (error.response.status === 401) {\n          setError('API anahtarı geçersiz. Lütfen daha sonra tekrar deneyin.');\n        } else {\n          setError('Bir hata oluştu. Lütfen daha sonra tekrar deneyin.');\n        }\n      } else if (error.request) {\n        setError('Sunucuya bağlanılamadı. Lütfen internet bağlantınızı kontrol edin.');\n      } else {\n        setError('Bir hata oluştu. Lütfen daha sonra tekrar deneyin.');\n      }\n      setWeatherData(null);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"search-bar\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: city,\n      onChange: e => setCity(e.target.value),\n      placeholder: \"\\u015Eehir ad\\u0131 girin...\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Ara\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchBar, \"BbIzi1csgupLqj4A6fqUxOYxArA=\");\n_c = SearchBar;\nexport default SearchBar;\nvar _c;\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","SearchBar","setWeatherData","setError","_s","city","setCity","API_KEY","BASE_URL","handleSubmit","e","preventDefault","trim","encodedCity","encodeURIComponent","response","get","data","cod","error","status","request","onSubmit","className","children","type","value","onChange","target","placeholder","required","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/muham/OneDrive/Desktop/havaDurum/src/components/SearchBar.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\ninterface SearchBarProps {\r\n  setWeatherData: (data: any) => void;\r\n  setError: (error: string) => void;\r\n}\r\n\r\nconst SearchBar: React.FC<SearchBarProps> = ({ setWeatherData, setError }) => {\r\n  const [city, setCity] = useState('');\r\n\r\n  const API_KEY = 'a7a652dd0dc5e4fd3b59a7ff0590b16f';\r\n  const BASE_URL = 'https://api.openweathermap.org/data/2.5/weather';\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (!city.trim()) {\r\n      setError('Lütfen bir şehir adı girin.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const encodedCity = encodeURIComponent(city.trim());\r\n      const response = await axios.get(\r\n        `${BASE_URL}?q=${encodedCity}&appid=${API_KEY}&units=metric&lang=tr`\r\n      );\r\n      \r\n      if (response.data && response.data.cod === 200) {\r\n        setWeatherData(response.data);\r\n        setError('');\r\n      } else {\r\n        setError('Hava durumu verisi alınamadı.');\r\n        setWeatherData(null);\r\n      }\r\n    } catch (error: any) {\r\n      if (error.response) {\r\n        if (error.response.status === 404) {\r\n          setError(`${city} şehri bulunamadı. Lütfen geçerli bir şehir adı girin.`);\r\n        } else if (error.response.status === 401) {\r\n          setError('API anahtarı geçersiz. Lütfen daha sonra tekrar deneyin.');\r\n        } else {\r\n          setError('Bir hata oluştu. Lütfen daha sonra tekrar deneyin.');\r\n        }\r\n      } else if (error.request) {\r\n        setError('Sunucuya bağlanılamadı. Lütfen internet bağlantınızı kontrol edin.');\r\n      } else {\r\n        setError('Bir hata oluştu. Lütfen daha sonra tekrar deneyin.');\r\n      }\r\n      setWeatherData(null);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"search-bar\">\r\n      <input\r\n        type=\"text\"\r\n        value={city}\r\n        onChange={(e) => setCity(e.target.value)}\r\n        placeholder=\"Şehir adı girin...\"\r\n        required\r\n      />\r\n      <button type=\"submit\">Ara</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SearchBar; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAO1B,MAAMC,SAAmC,GAAGA,CAAC;EAAEC,cAAc;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5E,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMU,OAAO,GAAG,kCAAkC;EAClD,MAAMC,QAAQ,GAAG,iDAAiD;EAElE,MAAMC,YAAY,GAAG,MAAOC,CAAkB,IAAK;IACjDA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI,CAACN,IAAI,CAACO,IAAI,CAAC,CAAC,EAAE;MAChBT,QAAQ,CAAC,6BAA6B,CAAC;MACvC;IACF;IAEA,IAAI;MACF,MAAMU,WAAW,GAAGC,kBAAkB,CAACT,IAAI,CAACO,IAAI,CAAC,CAAC,CAAC;MACnD,MAAMG,QAAQ,GAAG,MAAMjB,KAAK,CAACkB,GAAG,CAC9B,GAAGR,QAAQ,MAAMK,WAAW,UAAUN,OAAO,uBAC/C,CAAC;MAED,IAAIQ,QAAQ,CAACE,IAAI,IAAIF,QAAQ,CAACE,IAAI,CAACC,GAAG,KAAK,GAAG,EAAE;QAC9ChB,cAAc,CAACa,QAAQ,CAACE,IAAI,CAAC;QAC7Bd,QAAQ,CAAC,EAAE,CAAC;MACd,CAAC,MAAM;QACLA,QAAQ,CAAC,+BAA+B,CAAC;QACzCD,cAAc,CAAC,IAAI,CAAC;MACtB;IACF,CAAC,CAAC,OAAOiB,KAAU,EAAE;MACnB,IAAIA,KAAK,CAACJ,QAAQ,EAAE;QAClB,IAAII,KAAK,CAACJ,QAAQ,CAACK,MAAM,KAAK,GAAG,EAAE;UACjCjB,QAAQ,CAAC,GAAGE,IAAI,wDAAwD,CAAC;QAC3E,CAAC,MAAM,IAAIc,KAAK,CAACJ,QAAQ,CAACK,MAAM,KAAK,GAAG,EAAE;UACxCjB,QAAQ,CAAC,0DAA0D,CAAC;QACtE,CAAC,MAAM;UACLA,QAAQ,CAAC,oDAAoD,CAAC;QAChE;MACF,CAAC,MAAM,IAAIgB,KAAK,CAACE,OAAO,EAAE;QACxBlB,QAAQ,CAAC,oEAAoE,CAAC;MAChF,CAAC,MAAM;QACLA,QAAQ,CAAC,oDAAoD,CAAC;MAChE;MACAD,cAAc,CAAC,IAAI,CAAC;IACtB;EACF,CAAC;EAED,oBACEF,OAAA;IAAMsB,QAAQ,EAAEb,YAAa;IAACc,SAAS,EAAC,YAAY;IAAAC,QAAA,gBAClDxB,OAAA;MACEyB,IAAI,EAAC,MAAM;MACXC,KAAK,EAAErB,IAAK;MACZsB,QAAQ,EAAGjB,CAAC,IAAKJ,OAAO,CAACI,CAAC,CAACkB,MAAM,CAACF,KAAK,CAAE;MACzCG,WAAW,EAAC,8BAAoB;MAChCC,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eACFlC,OAAA;MAAQyB,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAG;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9B,CAAC;AAEX,CAAC;AAAC9B,EAAA,CAxDIH,SAAmC;AAAAkC,EAAA,GAAnClC,SAAmC;AA0DzC,eAAeA,SAAS;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}